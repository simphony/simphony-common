# code auto-generated by the
# simphony-metadata/scripts/generate.py script.
from collections import namedtuple

import numpy
import uuid  # noqa

ATTRIBUTES = ["name", "definition", "key", "shape", "length", "dtype"]
Keyword = namedtuple("Keyword", ATTRIBUTES)

KEYWORDS = {
    'ACCELERATION': Keyword(
        name='Acceleration',
        definition='Acceleration of a point or node',  # noqa
        key='ACCELERATION',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'AMPHIPHILICITY': Keyword(
        name='Amphiphilicity',
        definition='Hydrophilic/-phile behaviour of a particle',  # noqa
        key='AMPHIPHILICITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ANGULAR_ACCELERATION': Keyword(
        name='AngularAcceleration',
        definition='Angular acceleration of a point or node',  # noqa
        key='ANGULAR_ACCELERATION',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'ANGULAR_VELOCITY': Keyword(
        name='AngularVelocity',
        definition='Angular velocity of a point or node',  # noqa
        key='ANGULAR_VELOCITY',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'BOND_LABEL': Keyword(
        name='BondLabel',
        definition='Unique ID of atoms',  # noqa
        key='BOND_LABEL',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'BOND_TYPE': Keyword(
        name='BondType',
        definition='Type of label',  # noqa
        key='BOND_TYPE',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'CHARGE': Keyword(
        name='Charge',
        definition='Charge',  # noqa
        key='CHARGE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'CHARGE_DENSITY': Keyword(
        name='ChargeDensity',
        definition='Charge density',  # noqa
        key='CHARGE_DENSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'CHEMICAL_SPECIE': Keyword(
        name='ChemicalSpecie',
        definition='Chemical specie',  # noqa
        key='CHEMICAL_SPECIE',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'COHESION_ENERGY_DENSITY': Keyword(
        name='CohesionEnergyDensity',
        definition='Work of adhesion per unit contact area',  # noqa
        key='COHESION_ENERGY_DENSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'COHESIVE_GROUP': Keyword(
        name='CohesiveGroup',
        definition='Group to define particles that can bond together',  # noqa
        key='COHESIVE_GROUP',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'COLLISION_OPERATOR': Keyword(
        name='CollisionOperator',
        definition='Collision operator of a model Boltzmann equation',  # noqa
        key='COLLISION_OPERATOR',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'CONCENTRATION': Keyword(
        name='Concentration',
        definition='Concentration of a substance',  # noqa
        key='CONCENTRATION',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'CONTACT_ANGLE': Keyword(
        name='ContactAngle',
        definition='Wettability in multiphase flows',  # noqa
        key='CONTACT_ANGLE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'COUPLING_TIME': Keyword(
        name='CouplingTime',
        definition='coupling time',  # noqa
        key='COUPLING_TIME',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'CRYSTAL_STORAGE': Keyword(
        name='CrystalStorage',
        definition='Additional information for visualization',  # noqa
        key='CRYSTAL_STORAGE',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'CURRENT': Keyword(
        name='Current',
        definition='current value of a parameter',  # noqa
        key='CURRENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'CUTOFF_DISTANCE': Keyword(
        name='CutoffDistance',
        definition='Distance where force is no longer taken into account',  # noqa
        key='CUTOFF_DISTANCE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DEBYE_LENGTH': Keyword(
        name='DebyeLength',
        definition='Electrostatic effects of particles in solution',  # noqa
        key='DEBYE_LENGTH',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DELTA_DISPLACEMENT': Keyword(
        name='DeltaDisplacement',
        definition='Displacement during the last time step',  # noqa
        key='DELTA_DISPLACEMENT',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'DENSITY': Keyword(
        name='Density',
        definition='Density',  # noqa
        key='DENSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DESCRIPTION': Keyword(
        name='Description',
        definition='Description text',  # noqa
        key='DESCRIPTION',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'DIELECTRIC_CONSTANT': Keyword(
        name='DielectricConstant',
        definition='Ratio of the permittivity of a substance to the permittivity of free space or vacuum',  # noqa
        key='DIELECTRIC_CONSTANT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DIFFUSION_COEFFICIENT': Keyword(
        name='DiffusionCoefficient',
        definition='Diffusion coefficient',  # noqa
        key='DIFFUSION_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DIFFUSION_VELOCITY': Keyword(
        name='DiffusionVelocity',
        definition='Diffusion velocity',  # noqa
        key='DIFFUSION_VELOCITY',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'DIRECTION': Keyword(
        name='Direction',
        definition='Geometric (more general than, e.g., velocity) could be used for spin',  # noqa
        key='DIRECTION',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'DISTRIBUTION': Keyword(
        name='Distribution',
        definition='Single-particle distribution function',  # noqa
        key='DISTRIBUTION',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DYNAMIC_PRESSURE': Keyword(
        name='DynamicPressure',
        definition='Dynamic pressure',  # noqa
        key='DYNAMIC_PRESSURE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'DYNAMIC_VISCOSITY': Keyword(
        name='DynamicViscosity',
        definition='Dynamic viscosity of fluid',  # noqa
        key='DYNAMIC_VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ELECTRIC_FIELD': Keyword(
        name='ElectricField',
        definition='Electric field',  # noqa
        key='ELECTRIC_FIELD',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ELECTRON_MASS': Keyword(
        name='ElectronMass',
        definition='Electron mass',  # noqa
        key='ELECTRON_MASS',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ELECTROSTATIC_FIELD': Keyword(
        name='ElectrostaticField',
        definition='Electrostatic field',  # noqa
        key='ELECTROSTATIC_FIELD',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'ENERGY': Keyword(
        name='Energy',
        definition='Energy',  # noqa
        key='ENERGY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ENERGY_WELL_DEPTH': Keyword(
        name='EnergyWellDepth',
        definition='Measurement of how strongly the two particles attract each other',  # noqa
        key='ENERGY_WELL_DEPTH',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'EQUATION_OF_STATE_COEFFICIENT': Keyword(
        name='EquationOfStateCoefficient',
        definition='Equation of state for multiphase fluids',  # noqa
        key='EQUATION_OF_STATE_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'EULER_ANGLES': Keyword(
        name='EulerAngles',
        definition='Euler angles',  # noqa
        key='EULER_ANGLES',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'EXTERNAL_APPLIED_FORCE': Keyword(
        name='ExternalAppliedForce',
        definition='Externally applied force (force fields, interactions, etc)',  # noqa
        key='EXTERNAL_APPLIED_FORCE',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'EXTERNAL_FORCING': Keyword(
        name='ExternalForcing',
        definition='Toggle for an external force',  # noqa
        key='EXTERNAL_FORCING',
        shape=[1],
        length=None,
        dtype=bool),
    'FINAL': Keyword(
        name='Final',
        definition='final value of a parameter',  # noqa
        key='FINAL',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'FLOW_TYPE': Keyword(
        name='FlowType',
        definition='Classification of a fluid flow type',  # noqa
        key='FLOW_TYPE',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'FLUX': Keyword(
        name='Flux',
        definition='Flux',  # noqa
        key='FLUX',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'FORCE': Keyword(
        name='Force',
        definition='Force',  # noqa
        key='FORCE',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'FRICTION_COEFFICIENT': Keyword(
        name='FrictionCoefficient',
        definition='Control particle friction',  # noqa
        key='FRICTION_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'FULL': Keyword(
        name='Full',
        definition='Full attribute of an entity.',  # noqa
        key='FULL',
        shape=[1],
        length=128,
        dtype=numpy.str),
    'HAMAKER_CONSTANT': Keyword(
        name='HamakerConstant',
        definition='Van der Waals body-body interaction',  # noqa
        key='HAMAKER_CONSTANT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'HEAT_CONDUCTIVITY': Keyword(
        name='HeatConductivity',
        definition='Heat conductivity',  # noqa
        key='HEAT_CONDUCTIVITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'HOMOGENIZED_STRESS_TENSOR': Keyword(
        name='HomogenizedStressTensor',
        definition='Homogenized stress tensor',  # noqa
        key='HOMOGENIZED_STRESS_TENSOR',
        shape=[9],
        length=None,
        dtype=numpy.float64),
    'INDEX': Keyword(
        name='Index',
        definition='An integer vector in 3D geometric space',  # noqa
        key='INDEX',
        shape=[3],
        length=None,
        dtype=numpy.int32),
    'INITIAL_VISCOSITY': Keyword(
        name='InitialViscosity',
        definition='Initial viscosity',  # noqa
        key='INITIAL_VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ION_VALENCE_EFFECT': Keyword(
        name='IonValenceEffect',
        definition='Coulomb interaction between particles',  # noqa
        key='ION_VALENCE_EFFECT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'KINEMATIC_VISCOSITY': Keyword(
        name='KinematicViscosity',
        definition='Kinematic viscosity of fluid',  # noqa
        key='KINEMATIC_VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'LABEL': Keyword(
        name='Label',
        definition='Label for a point or node',  # noqa
        key='LABEL',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'LATTICE_PARAMETER': Keyword(
        name='LatticeParameter',
        definition='A lattice parameter to define a Bravais Lattice',  # noqa
        key='LATTICE_PARAMETER',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'LATTICE_SPACING': Keyword(
        name='LatticeSpacing',
        definition='Distance between adjacent lattice nodes',  # noqa
        key='LATTICE_SPACING',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'LATTICE_VECTORS': Keyword(
        name='LatticeVectors',
        definition='Lattice vectors of unit cell of the component',  # noqa
        key='LATTICE_VECTORS',
        shape=[3, 3],
        length=None,
        dtype=numpy.float64),
    'LINEAR_CONSTANT': Keyword(
        name='LinearConstant',
        definition='Linear constant',  # noqa
        key='LINEAR_CONSTANT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MAGNITUDE': Keyword(
        name='Magnitude',
        definition='Magnitude of vector variable',  # noqa
        key='MAGNITUDE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MAJOR': Keyword(
        name='Major',
        definition='Major attribute of an entity.',  # noqa
        key='MAJOR',
        shape=[1],
        length=8,
        dtype=numpy.str),
    'MASS': Keyword(
        name='Mass',
        definition='Particle mass',  # noqa
        key='MASS',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MATERIAL_TYPE': Keyword(
        name='MaterialType',
        definition='Material dimension and type',  # noqa
        key='MATERIAL_TYPE',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'MAXIMUM_COURANT_NUMBER': Keyword(
        name='MaximumCourantNumber',
        definition='Maximum Courant number',  # noqa
        key='MAXIMUM_COURANT_NUMBER',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MAXIMUM_VISCOSITY': Keyword(
        name='MaximumViscosity',
        definition='Maximum viscosity',  # noqa
        key='MAXIMUM_VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MINIMUM_VISCOSITY': Keyword(
        name='MinimumViscosity',
        definition='Minimum viscosity',  # noqa
        key='MINIMUM_VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MINOR': Keyword(
        name='Minor',
        definition='Minor attribute of an entity.',  # noqa
        key='MINOR',
        shape=[1],
        length=8,
        dtype=numpy.str),
    'MOMENTUM': Keyword(
        name='Momentum',
        definition='Momentum',  # noqa
        key='MOMENTUM',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'MOMENT_INERTIA': Keyword(
        name='MomentInertia',
        definition='Moment inertia',  # noqa
        key='MOMENT_INERTIA',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'NAME': Keyword(
        name='Name',
        definition='Naming of high-level objects (e.g. solver models)',  # noqa
        key='NAME',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'NAME_UC': Keyword(
        name='NameUc',
        definition='Name of the unit cell of the component',  # noqa
        key='NAME_UC',
        shape=[1],
        length=20,
        dtype=numpy.str),
    'NONE': Keyword(
        name='None',
        definition='a general none value',  # noqa
        key='NONE',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'NUMBER_OF_CORES': Keyword(
        name='NumberOfCores',
        definition='Number of cpu cores to use',  # noqa
        key='NUMBER_OF_CORES',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'NUMBER_OF_PHYSICS_STATES': Keyword(
        name='NumberOfPhysicsStates',
        definition='Number of solution states to be saved',  # noqa
        key='NUMBER_OF_PHYSICS_STATES',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'NUMBER_OF_POINTS': Keyword(
        name='NumberOfPoints',
        definition='Number of points or nodes',  # noqa
        key='NUMBER_OF_POINTS',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'NUMBER_OF_TIME_STEPS': Keyword(
        name='NumberOfTimeSteps',
        definition='Number of discrete time steps',  # noqa
        key='NUMBER_OF_TIME_STEPS',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'OCCUPANCY': Keyword(
        name='Occupancy',
        definition='Occupancy of an atomic position',  # noqa
        key='OCCUPANCY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ORDER_PARAMETER': Keyword(
        name='OrderParameter',
        definition='Phase field in multiphase flows',  # noqa
        key='ORDER_PARAMETER',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ORIGINAL_POSITION': Keyword(
        name='OriginalPosition',
        definition='Position at the beginning of the calculation',  # noqa
        key='ORIGINAL_POSITION',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'PATCH': Keyword(
        name='Patch',
        definition='Patch attribute of an entity.',  # noqa
        key='PATCH',
        shape=[1],
        length=8,
        dtype=numpy.str),
    'PHASE_INTERACTION_STRENGTH': Keyword(
        name='PhaseInteractionStrength',
        definition='Strength of phase interactions on a particle',  # noqa
        key='PHASE_INTERACTION_STRENGTH',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'POISSON_RATIO': Keyword(
        name='PoissonRatio',
        definition='Poisson ratio',  # noqa
        key='POISSON_RATIO',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'POSITION': Keyword(
        name='Position',
        definition='Position of a point or node or atom',  # noqa
        key='POSITION',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'POTENTIAL_ENERGY': Keyword(
        name='PotentialEnergy',
        definition='Potential energy',  # noqa
        key='POTENTIAL_ENERGY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'POWER_LAW_INDEX': Keyword(
        name='PowerLawIndex',
        definition='Power law index',  # noqa
        key='POWER_LAW_INDEX',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'PRESSURE': Keyword(
        name='Pressure',
        definition='Pressure',  # noqa
        key='PRESSURE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'PROBABILITY_COEFFICIENT': Keyword(
        name='ProbabilityCoefficient',
        definition='For stochastic processes (e.g. sorption)',  # noqa
        key='PROBABILITY_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'RADIUS': Keyword(
        name='Radius',
        definition='Particle radius',  # noqa
        key='RADIUS',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'REFERENCE_DENSITY': Keyword(
        name='ReferenceDensity',
        definition='Reference value for density',  # noqa
        key='REFERENCE_DENSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'RELATIVE_VELOCITY': Keyword(
        name='RelativeVelocity',
        definition='Relative velocity',  # noqa
        key='RELATIVE_VELOCITY',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'RELAXATION_TIME': Keyword(
        name='RelaxationTime',
        definition='Relaxation time',  # noqa
        key='RELAXATION_TIME',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'RESTITUTION_COEFFICIENT': Keyword(
        name='RestitutionCoefficient',
        definition='Restitution coefficient',  # noqa
        key='RESTITUTION_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ROLLING_FRICTION': Keyword(
        name='RollingFriction',
        definition='Rolling friction coefficient',  # noqa
        key='ROLLING_FRICTION',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'SCALING_COEFFICIENT': Keyword(
        name='ScalingCoefficient',
        definition='Coarsening or time-scale bridging',  # noqa
        key='SCALING_COEFFICIENT',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'SHAPE_CENTER': Keyword(
        name='ShapeCenter',
        definition='Geometrical center of the shape of the material',  # noqa
        key='SHAPE_CENTER',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SHAPE_LENGTH': Keyword(
        name='ShapeLength',
        definition='Length in angstroms of the shape of the materials',  # noqa
        key='SHAPE_LENGTH',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SHAPE_LENGTH_UC': Keyword(
        name='ShapeLengthUc',
        definition='Length in units cells of the shape of the material',  # noqa
        key='SHAPE_LENGTH_UC',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SHAPE_RADIUS': Keyword(
        name='ShapeRadius',
        definition='Radius for a spherical material',  # noqa
        key='SHAPE_RADIUS',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SHAPE_SIDE': Keyword(
        name='ShapeSide',
        definition='Side length for a hexagonal material',  # noqa
        key='SHAPE_SIDE',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SIMULATION_DOMAIN_DIMENSIONS': Keyword(
        name='SimulationDomainDimensions',
        definition='Size of the simulation models',  # noqa
        key='SIMULATION_DOMAIN_DIMENSIONS',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SIMULATION_DOMAIN_ORIGIN': Keyword(
        name='SimulationDomainOrigin',
        definition='Offset for the simulation models',  # noqa
        key='SIMULATION_DOMAIN_ORIGIN',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'SIZE': Keyword(
        name='Size',
        definition='size of a parameter or quantity',  # noqa
        key='SIZE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'SMOOTHING_LENGTH': Keyword(
        name='SmoothingLength',
        definition='Half of kernel cut-off for all splines',  # noqa
        key='SMOOTHING_LENGTH',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'SPHERICITY': Keyword(
        name='Sphericity',
        definition='Sphericity of the particle',  # noqa
        key='SPHERICITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'STATUS': Keyword(
        name='Status',
        definition='Status of a point or node',  # noqa
        key='STATUS',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'STEADY_STATE': Keyword(
        name='SteadyState',
        definition='Use steady state solver',  # noqa
        key='STEADY_STATE',
        shape=[1],
        length=None,
        dtype=bool),
    'STRAIN_TENSOR': Keyword(
        name='StrainTensor',
        definition='Strain tensor',  # noqa
        key='STRAIN_TENSOR',
        shape=[9],
        length=None,
        dtype=numpy.float64),
    'STRESS_TENSOR': Keyword(
        name='StressTensor',
        definition='Stress tensor',  # noqa
        key='STRESS_TENSOR',
        shape=[9],
        length=None,
        dtype=numpy.float64),
    'SURFACE_TENSION': Keyword(
        name='SurfaceTension',
        definition='Surface tension',  # noqa
        key='SURFACE_TENSION',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'SYMMETRY_LATTICE_VECTORS': Keyword(
        name='SymmetryLatticeVectors',
        definition='Symmetry group',  # noqa
        key='SYMMETRY_LATTICE_VECTORS',
        shape=[1],
        length=None,
        dtype=numpy.int32),
    'TEMPERATURE': Keyword(
        name='Temperature',
        definition='Temperature',  # noqa
        key='TEMPERATURE',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'THERMODYNAMIC_ENSEMBLE': Keyword(
        name='ThermodynamicEnsemble',
        definition='Thermodynamic ensemble',  # noqa
        key='THERMODYNAMIC_ENSEMBLE',
        shape=[1],
        length=4096,
        dtype=numpy.str),
    'TIME': Keyword(
        name='Time',
        definition='Time',  # noqa
        key='TIME',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'TIME_STEP': Keyword(
        name='TimeStep',
        definition='Length of a discrete time step',  # noqa
        key='TIME_STEP',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'TORQUE': Keyword(
        name='Torque',
        definition='Torque',  # noqa
        key='TORQUE',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'UID': Keyword(
        name='Uid',
        definition='Universal unique id represented as a hex string size 32',  # noqa
        key='UID',
        shape=[1],
        length=32,
        dtype=numpy.str),
    'VAN_DER_WAALS_RADIUS': Keyword(
        name='VanDerWaalsRadius',
        definition='Distance at which the intermolecular potential between the two particles is zero',  # noqa
        key='VAN_DER_WAALS_RADIUS',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'VARIABLE': Keyword(
        name='Variable',
        definition='a list of physics/chemistry variables in a PE or MR',  # noqa
        key='VARIABLE',
        shape=[1],
        length=4096,
        dtype=numpy.str),
    'VECTOR': Keyword(
        name='Vector',
        definition='A vector in 3D geometric space',  # noqa
        key='VECTOR',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'VELOCITY': Keyword(
        name='Velocity',
        definition='Velocity of a point or node',  # noqa
        key='VELOCITY',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'VISCOSITY': Keyword(
        name='Viscosity',
        definition='Viscosity',  # noqa
        key='VISCOSITY',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'VOLUME': Keyword(
        name='Volume',
        definition='Volume of a particle, cell, etc.',  # noqa
        key='VOLUME',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'VOLUME_FRACTION': Keyword(
        name='VolumeFraction',
        definition='Volume fraction',  # noqa
        key='VOLUME_FRACTION',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'VOLUME_FRACTION_GRADIENT': Keyword(
        name='VolumeFractionGradient',
        definition='Volume fraction gradient',  # noqa
        key='VOLUME_FRACTION_GRADIENT',
        shape=[3],
        length=None,
        dtype=numpy.float64),
    'YOUNG_MODULUS': Keyword(
        name='YoungModulus',
        definition='Young modulus',  # noqa
        key='YOUNG_MODULUS',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ZETA_POTENTIAL': Keyword(
        name='ZetaPotential',
        definition='Coulomb interaction between particles',  # noqa
        key='ZETA_POTENTIAL',
        shape=[1],
        length=None,
        dtype=numpy.float64),
    'ATOM': Keyword(
        name='Atom',
        definition='An atom',  # noqa
        key='ATOM',
        shape=[1],
        length=None,
        dtype=None),
    'ATOMISTIC': Keyword(
        name='Atomistic',
        definition='Atomistic model category according to the RoMM',  # noqa
        key='ATOMISTIC',
        shape=[1],
        length=None,
        dtype=None),
    'BASE_CENTERED_MONOCLINIC_LATTICE': Keyword(
        name='BaseCenteredMonoclinicLattice',
        definition='A base centered monoclinic lattice',  # noqa
        key='BASE_CENTERED_MONOCLINIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'BASE_CENTERED_ORTHORHOMBIC_LATTICE': Keyword(
        name='BaseCenteredOrthorhombicLattice',
        definition='A base centered orthorhombic lattice',  # noqa
        key='BASE_CENTERED_ORTHORHOMBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'BASIS': Keyword(
        name='Basis',
        definition='Space basis vectors (row wise)',  # noqa
        key='BASIS',
        shape=[1],
        length=None,
        dtype=None),
    'BERENDSEN': Keyword(
        name='Berendsen',
        definition='The Berendsen thermostat model for temperature rescaling of all particles. The coupling time specifies how rapidly the temperature should be relaxed or coupled to the bath.',  # noqa
        key='BERENDSEN',
        shape=[1],
        length=None,
        dtype=None),
    'BINGHAM_PLASTIC_MODEL': Keyword(
        name='BinghamPlasticModel',
        definition='Bingham plastic viscosity model (only in mixture model)',  # noqa
        key='BINGHAM_PLASTIC_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'BIRD_CARREAU_MODEL': Keyword(
        name='BirdCarreauModel',
        definition='Bird-Carreau model',  # noqa
        key='BIRD_CARREAU_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'BODY_CENTERED_CUBIC_LATTICE': Keyword(
        name='BodyCenteredCubicLattice',
        definition='A body centred cubic lattice',  # noqa
        key='BODY_CENTERED_CUBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'BODY_CENTERED_ORTHORHOMBIC_LATTICE': Keyword(
        name='BodyCenteredOrthorhombicLattice',
        definition='A body centered orthorhombic lattice',  # noqa
        key='BODY_CENTERED_ORTHORHOMBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'BODY_CENTERED_TETRAGONAL_LATTICE': Keyword(
        name='BodyCenteredTetragonalLattice',
        definition='A body centered tetragonal lattice',  # noqa
        key='BODY_CENTERED_TETRAGONAL_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'BOND': Keyword(
        name='Bond',
        definition='A bond between two or more atoms or particles',  # noqa
        key='BOND',
        shape=[1],
        length=None,
        dtype=None),
    'BOUNDARY': Keyword(
        name='Boundary',
        definition='A computational boundary in the system, it includes translated physical boundaries to computational boundaries and a list of conditions operating on it.',  # noqa
        key='BOUNDARY',
        shape=[1],
        length=None,
        dtype=None),
    'BOX': Keyword(
        name='Box',
        definition='A simple hexahedron simulation box defining six boundary faces that are defined by three box vectors. The same boundary condition should be specified for each direction (two faces at a time).',  # noqa
        key='BOX',
        shape=[1],
        length=None,
        dtype=None),
    'BRAVAIS_LATTICE': Keyword(
        name='BravaisLattice',
        definition='A Bravais lattice',  # noqa
        key='BRAVAIS_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'CELL': Keyword(
        name='Cell',
        definition='Element for storing 3D geometrical objects',  # noqa
        key='CELL',
        shape=[1],
        length=None,
        dtype=None),
    'CFD': Keyword(
        name='Cfd',
        definition='Computational fluid dynamics general (set of ) equations for momentum, mass and energy',  # noqa
        key='CFD',
        shape=[1],
        length=None,
        dtype=None),
    'COMPRESSIBILITY_MODEL': Keyword(
        name='CompressibilityModel',
        definition='Compressibility model',  # noqa
        key='COMPRESSIBILITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'COMPUTATIONAL_METHOD': Keyword(
        name='ComputationalMethod',
        definition='A computational method according to the RoMM',  # noqa
        key='COMPUTATIONAL_METHOD',
        shape=[1],
        length=None,
        dtype=None),
    'COMPUTATIONAL_MODEL': Keyword(
        name='ComputationalModel',
        definition='Model category according to the RoMM',  # noqa
        key='COMPUTATIONAL_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'CONDITION': Keyword(
        name='Condition',
        definition='Condition on boundaries or model entities',  # noqa
        key='CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'CONSTANT_ELECTROSTATIC_FIELD_MODEL': Keyword(
        name='ConstantElectrostaticFieldModel',
        definition='A constant electrostatic field model',  # noqa
        key='CONSTANT_ELECTROSTATIC_FIELD_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'CONSTANT_PRESSURE_CONDITION': Keyword(
        name='ConstantPressureCondition',
        definition='Constant pressure condition',  # noqa
        key='CONSTANT_PRESSURE_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'CONSTANT_VELOCITY_CONDITION': Keyword(
        name='ConstantVelocityCondition',
        definition='Constant velocity condition',  # noqa
        key='CONSTANT_VELOCITY_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'CONSTANT_VOLUME_FRACTION_CONDITION': Keyword(
        name='ConstantVolumeFractionCondition',
        definition='Constant volume fraction condition',  # noqa
        key='CONSTANT_VOLUME_FRACTION_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'CONTINUUM': Keyword(
        name='Continuum',
        definition='Continuum model category according to the RoMM',  # noqa
        key='CONTINUUM',
        shape=[1],
        length=None,
        dtype=None),
    'COULOMB': Keyword(
        name='Coulomb',
        definition='The standard electrostatic Coulombic interaction potential between a pair of point charges',  # noqa
        key='COULOMB',
        shape=[1],
        length=None,
        dtype=None),
    'COULOMB_FRICTION_FORCE': Keyword(
        name='CoulombFrictionForce',
        definition='Shear force accounting for the tangential displacement between contacting particles',  # noqa
        key='COULOMB_FRICTION_FORCE',
        shape=[1],
        length=None,
        dtype=None),
    'CROSS_POWER_LAW_MODEL': Keyword(
        name='CrossPowerLawModel',
        definition='Viscosity Cross power law model',  # noqa
        key='CROSS_POWER_LAW_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'CUBIC_LATTICE': Keyword(
        name='CubicLattice',
        definition='A cubic lattice',  # noqa
        key='CUBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'CUDS': Keyword(
        name='CUDS',
        definition='CUDS Container, a knowledge-based container of semantic concepts used to agglomerate relevant data and information.',  # noqa
        key='CUDS',
        shape=[1],
        length=None,
        dtype=None),
    'CUDS_COMPONENT': Keyword(
        name='CUDSComponent',
        definition='Base data type for the CUDS components',  # noqa
        key='CUDS_COMPONENT',
        shape=[1],
        length=None,
        dtype=None),
    'CUDS_ITEM': Keyword(
        name='CUDSItem',
        definition='Root of all CUDS types',  # noqa
        key='CUDS_ITEM',
        shape=[1],
        length=None,
        dtype=None),
    'DATA_SET': Keyword(
        name='DataSet',
        definition='A representation of the computational entities of the model equations',  # noqa
        key='DATA_SET',
        shape=[1],
        length=None,
        dtype=None),
    'DEM': Keyword(
        name='Dem',
        definition='Discrete element method',  # noqa
        key='DEM',
        shape=[1],
        length=None,
        dtype=None),
    'DIRICHLET': Keyword(
        name='Dirichlet',
        definition='Dirichlet boundary condition to specify the value the solutions takes on the boundary of the domain.',  # noqa
        key='DIRICHLET',
        shape=[1],
        length=None,
        dtype=None),
    'DISSIPATION_FORCE': Keyword(
        name='DissipationForce',
        definition='Viscous normal force describing the inelasticity of particle collisions',  # noqa
        key='DISSIPATION_FORCE',
        shape=[1],
        length=None,
        dtype=None),
    'EDGE': Keyword(
        name='Edge',
        definition='Element for storing 1D geometrical objects',  # noqa
        key='EDGE',
        shape=[1],
        length=None,
        dtype=None),
    'ELECTRONIC': Keyword(
        name='Electronic',
        definition='Electronic model category according to the RoMM',  # noqa
        key='ELECTRONIC',
        shape=[1],
        length=None,
        dtype=None),
    'ELECTROSTATIC_MODEL': Keyword(
        name='ElectrostaticModel',
        definition='Electrostatic model',  # noqa
        key='ELECTROSTATIC_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'EMPTY_CONDITION': Keyword(
        name='EmptyCondition',
        definition='an entity to represent that no condition is applied on that domain or entitiy(ies)',  # noqa
        key='EMPTY_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'ENGINE': Keyword(
        name='Engine',
        definition='Represents a software tool which is used to solve the physics equation',  # noqa
        key='ENGINE',
        shape=[1],
        length=None,
        dtype=None),
    'ENGINE_FEATURE': Keyword(
        name='EngineFeature',
        definition='Provides a physics equation and methods that engines provides to solve them',  # noqa
        key='ENGINE_FEATURE',
        shape=[1],
        length=None,
        dtype=None),
    'FACE': Keyword(
        name='Face',
        definition='Element for storing 2D geometrical objects',  # noqa
        key='FACE',
        shape=[1],
        length=None,
        dtype=None),
    'FACE_CENTERED_CUBIC_LATTICE': Keyword(
        name='FaceCenteredCubicLattice',
        definition='A face centred cubic lattice',  # noqa
        key='FACE_CENTERED_CUBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'FACE_CENTERED_ORTHORHOMBIC_LATTICE': Keyword(
        name='FaceCenteredOrthorhombicLattice',
        definition='A face centered orthorhombic lattice',  # noqa
        key='FACE_CENTERED_ORTHORHOMBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'FEM': Keyword(
        name='Fem',
        definition='Finite element method',  # noqa
        key='FEM',
        shape=[1],
        length=None,
        dtype=None),
    'FREE': Keyword(
        name='Free',
        definition='Free boundary condition',  # noqa
        key='FREE',
        shape=[1],
        length=None,
        dtype=None),
    'FREE_SLIP_VELOCITY': Keyword(
        name='FreeSlipVelocity',
        definition='Wall free slip velocity boundary condition, normal velocity is zero and tangential velocities are solved for.',  # noqa
        key='FREE_SLIP_VELOCITY',
        shape=[1],
        length=None,
        dtype=None),
    'FREE_SURFACE_MODEL': Keyword(
        name='FreeSurfaceModel',
        definition='Free surface model',  # noqa
        key='FREE_SURFACE_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'FVM': Keyword(
        name='Fvm',
        definition='Finite volume method',  # noqa
        key='FVM',
        shape=[1],
        length=None,
        dtype=None),
    'GRANULAR_DYNAMICS': Keyword(
        name='GranularDynamics',
        definition='Granular dynamics of spherical particles using DEM',  # noqa
        key='GRANULAR_DYNAMICS',
        shape=[1],
        length=None,
        dtype=None),
    'GRAVITY_MODEL': Keyword(
        name='GravityModel',
        definition='A simple gravity model',  # noqa
        key='GRAVITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'HERSCHEL_BULKLEY_MODEL': Keyword(
        name='HerschelBulkleyModel',
        definition='Herschel-Bulkley model combines the effects of Bingham plastic and power-law behavior in a fluid',  # noqa
        key='HERSCHEL_BULKLEY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'HEXAGONAL_LATTICE': Keyword(
        name='HexagonalLattice',
        definition='A hexagonal lattice',  # noqa
        key='HEXAGONAL_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'INCOMPRESSIBLE_FLUID_MODEL': Keyword(
        name='IncompressibleFluidModel',
        definition='Incompressible fluid model',  # noqa
        key='INCOMPRESSIBLE_FLUID_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'INLET_OUTLET_VELOCITY': Keyword(
        name='InletOutletVelocity',
        definition='Inlet outlet boundary condition (outlet condition is zero gradient and inlet given variable value)',  # noqa
        key='INLET_OUTLET_VELOCITY',
        shape=[1],
        length=None,
        dtype=None),
    'INLET_OUTLET_VOLUME_FRACTION': Keyword(
        name='InletOutletVolumeFraction',
        definition='Inlet outlet boundary condition (outlet condition is zero gradient and inlet given variable value)',  # noqa
        key='INLET_OUTLET_VOLUME_FRACTION',
        shape=[1],
        length=None,
        dtype=None),
    'INTEGRATION_STEP': Keyword(
        name='IntegrationStep',
        definition='the current step, integration step, and final number of steps for a simulation stored on each cuds (a specific state).',  # noqa
        key='INTEGRATION_STEP',
        shape=[1],
        length=None,
        dtype=None),
    'INTEGRATION_TIME': Keyword(
        name='IntegrationTime',
        definition='the current time, time step, and final time for a simulation stored on each cuds (a specific state).',  # noqa
        key='INTEGRATION_TIME',
        shape=[1],
        length=None,
        dtype=None),
    'INTERATOMIC_POTENTIAL': Keyword(
        name='InteratomicPotential',
        definition='Interatomic Potentials Category',  # noqa
        key='INTERATOMIC_POTENTIAL',
        shape=[1],
        length=None,
        dtype=None),
    'ISOTHERMAL_MODEL': Keyword(
        name='IsothermalModel',
        definition='Isothermal heat transport model, no transport of heat is assumed',  # noqa
        key='ISOTHERMAL_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'KS_DFT': Keyword(
        name='KsDft',
        definition='Kohn-Sham DFT equations',  # noqa
        key='KS_DFT',
        shape=[1],
        length=None,
        dtype=None),
    'LAMINAR_FLOW_MODEL': Keyword(
        name='LaminarFlowModel',
        definition='Laminar model',  # noqa
        key='LAMINAR_FLOW_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'LATTICE': Keyword(
        name='Lattice',
        definition='A lattice',  # noqa
        key='LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'LENNARD_JONES_6_12': Keyword(
        name='LennardJones_6_12',
        definition='A Lennard-Jones 6-12 Potential',  # noqa
        key='LENNARD_JONES_6_12',
        shape=[1],
        length=None,
        dtype=None),
    'MATERIAL': Keyword(
        name='Material',
        definition='Definition of a material and its properties in the data container',  # noqa
        key='MATERIAL',
        shape=[1],
        length=None,
        dtype=None),
    'MATERIAL_RELATION': Keyword(
        name='MaterialRelation',
        definition='Material relation which together with the Physics equation gives the model equation',  # noqa
        key='MATERIAL_RELATION',
        shape=[1],
        length=None,
        dtype=None),
    'MESH': Keyword(
        name='Mesh',
        definition='A mesh',  # noqa
        key='MESH',
        shape=[1],
        length=None,
        dtype=None),
    'MESH_ELEMENT': Keyword(
        name='MeshElement',
        definition='An element for storing geometrical objects',  # noqa
        key='MESH_ELEMENT',
        shape=[1],
        length=None,
        dtype=None),
    'MESOSCOPIC': Keyword(
        name='Mesoscopic',
        definition='Mesoscopic model category according to the RoMM',  # noqa
        key='MESOSCOPIC',
        shape=[1],
        length=None,
        dtype=None),
    'MESOSCOPIC_RELATIVE_VELOCITY_MODEL': Keyword(
        name='MesoscopicRelativeVelocityModel',
        definition='Relative velocity taken from meso scopic model',  # noqa
        key='MESOSCOPIC_RELATIVE_VELOCITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'MESOSCOPIC_STRESS_MODEL': Keyword(
        name='MesoscopicStressModel',
        definition='Stress model from meso scopic to use in mixture model',  # noqa
        key='MESOSCOPIC_STRESS_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'MIXED_CONDITION': Keyword(
        name='MixedCondition',
        definition='general mixed boundary condition',  # noqa
        key='MIXED_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'MIXTURE_MODEL': Keyword(
        name='MixtureModel',
        definition='Mixture (drift flux) model',  # noqa
        key='MIXTURE_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'MODEL_EQUATION': Keyword(
        name='ModelEquation',
        definition='The model equations are represented by all physics equations and material relations according to the RoMM',  # noqa
        key='MODEL_EQUATION',
        shape=[1],
        length=None,
        dtype=None),
    'MOLECULAR_DYNAMICS': Keyword(
        name='MolecularDynamics',
        definition='Classical atomistic molecular dynamics using Newtons equations of motion',  # noqa
        key='MOLECULAR_DYNAMICS',
        shape=[1],
        length=None,
        dtype=None),
    'MOLECULAR_STATICS': Keyword(
        name='MolecularStatics',
        definition='Classical atomistic static molecular model',  # noqa
        key='MOLECULAR_STATICS',
        shape=[1],
        length=None,
        dtype=None),
    'MONOCLINIC_LATTICE': Keyword(
        name='MonoclinicLattice',
        definition='A monoclinic lattice',  # noqa
        key='MONOCLINIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'MULTIPHASE_MATERIAL': Keyword(
        name='MultiphaseMaterial',
        definition='a multiphase material system, specifies the materials composing the mixture, or suspension, or multicrystal, etc.',  # noqa
        key='MULTIPHASE_MATERIAL',
        shape=[1],
        length=None,
        dtype=None),
    'MULTIPHASE_MODEL': Keyword(
        name='MultiphaseModel',
        definition='Multiphase model',  # noqa
        key='MULTIPHASE_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'NEUMANN': Keyword(
        name='Neumann',
        definition='Neumann boundary condition, it specifies the values that the derivative of a solution with respect to the variable is to take on the boundary of the domain.',  # noqa
        key='NEUMANN',
        shape=[1],
        length=None,
        dtype=None),
    'NEWTONIAN_FLUID_MODEL': Keyword(
        name='NewtonianFluidModel',
        definition='Newtonian fluid model assuming the viscous stresses are proportional to the rates of deformation',  # noqa
        key='NEWTONIAN_FLUID_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'NODE': Keyword(
        name='Node',
        definition='A node on a structured grid like lattice',  # noqa
        key='NODE',
        shape=[1],
        length=None,
        dtype=None),
    'NOSE_HOOVER': Keyword(
        name='NoseHoover',
        definition='Add an extra term to the equation of motion to model the interaction with an external heat bath. The coupling time specifies how rapidly the temperature should be coupled to the bath.',  # noqa
        key='NOSE_HOOVER',
        shape=[1],
        length=None,
        dtype=None),
    'ORIGIN': Keyword(
        name='Origin',
        definition='The origin of a space system',  # noqa
        key='ORIGIN',
        shape=[1],
        length=None,
        dtype=None),
    'ORTHORHOMBIC_LATTICE': Keyword(
        name='OrthorhombicLattice',
        definition='An orthorhombic lattice',  # noqa
        key='ORTHORHOMBIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'PAIR_POTENTIAL': Keyword(
        name='PairPotential',
        definition='Pair Interatomic Potentials Category',  # noqa
        key='PAIR_POTENTIAL',
        shape=[1],
        length=None,
        dtype=None),
    'PARTICLE': Keyword(
        name='Particle',
        definition='A particle in a 3D space system',  # noqa
        key='PARTICLE',
        shape=[1],
        length=None,
        dtype=None),
    'PARTICLES': Keyword(
        name='Particles',
        definition='A collection of particles',  # noqa
        key='PARTICLES',
        shape=[1],
        length=None,
        dtype=None),
    'PERIODIC': Keyword(
        name='Periodic',
        definition='Periodic boundary condition (PBC)',  # noqa
        key='PERIODIC',
        shape=[1],
        length=None,
        dtype=None),
    'PHASE_VOLUME_FRACTION': Keyword(
        name='PhaseVolumeFraction',
        definition='volume fraction of a (one) phase (material) on a dataset entity',  # noqa
        key='PHASE_VOLUME_FRACTION',
        shape=[1],
        length=None,
        dtype=None),
    'PHASE_VOLUME_FRACTIONS': Keyword(
        name='PhaseVolumeFractions',
        definition='volume fractions for a number of phases (material) on a dataset entity',  # noqa
        key='PHASE_VOLUME_FRACTIONS',
        shape=[1],
        length=None,
        dtype=None),
    'PHYSICS_EQUATION': Keyword(
        name='PhysicsEquation',
        definition='Physics equation',  # noqa
        key='PHYSICS_EQUATION',
        shape=[1],
        length=None,
        dtype=None),
    'POINT': Keyword(
        name='Point',
        definition='A point in a 3D space system',  # noqa
        key='POINT',
        shape=[1],
        length=None,
        dtype=None),
    'POWER_LAW_VISCOSITY_MODEL': Keyword(
        name='PowerLawViscosityModel',
        definition='Power law model for a variable viscosity function that is limited by minimum and maximum values',  # noqa
        key='POWER_LAW_VISCOSITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'PRIMITIVE_CELL': Keyword(
        name='PrimitiveCell',
        definition='A lattice primitive cell',  # noqa
        key='PRIMITIVE_CELL',
        shape=[1],
        length=None,
        dtype=None),
    'RELATIVE_VELOCITY_MODEL': Keyword(
        name='RelativeVelocityModel',
        definition='Relative velocity model to use in mixture model',  # noqa
        key='RELATIVE_VELOCITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'RHEOLOGY_MODEL': Keyword(
        name='RheologyModel',
        definition='Rheology model of a CFD fluid',  # noqa
        key='RHEOLOGY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'RHOMBOHEDRAL_LATTICE': Keyword(
        name='RhombohedralLattice',
        definition='A rhombohedral lattice',  # noqa
        key='RHOMBOHEDRAL_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'ROBIN': Keyword(
        name='Robin',
        definition='A mixed boundary condition $\alpha \Phi (x) + \beta (x) \partial {\Phi} / \partial {\bf{n}} (x) = h(x)$, with $h$ is the value.',  # noqa
        key='ROBIN',
        shape=[1],
        length=None,
        dtype=None),
    'SHEAR_STRESS_POWER_LAW_SLIP_VELOCITY': Keyword(
        name='ShearStressPowerLawSlipVelocity',
        definition='Shear stress power law dependant slip velocity boundary condition. Nonlinear boundary condition for wall tangential velocity of the form v_s = CUBA.LINEAR_CONSTANT * S^CUBA.POWER_LAW_INDEX where v_s is the slip velocity (tangential velocity on the wall) and S is the wall shear stress',  # noqa
        key='SHEAR_STRESS_POWER_LAW_SLIP_VELOCITY',
        shape=[1],
        length=None,
        dtype=None),
    'SIMPLE_RELATIVE_VELOCITY_MODEL': Keyword(
        name='SimpleRelativeVelocityModel',
        definition='Simple relative velocity model to use in mixture model',  # noqa
        key='SIMPLE_RELATIVE_VELOCITY_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'SINGLE_PHASE_MODEL': Keyword(
        name='SinglePhaseModel',
        definition='A single phase fluid model',  # noqa
        key='SINGLE_PHASE_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'SJKR_COHESION_FORCE': Keyword(
        name='SjkrCohesionForce',
        definition='Additional normal force tending to maintain the contact',  # noqa
        key='SJKR_COHESION_FORCE',
        shape=[1],
        length=None,
        dtype=None),
    'SOFTWARE_TOOL': Keyword(
        name='SoftwareTool',
        definition='Represents a software tool which is used to solve the model or in pre/post processing',  # noqa
        key='SOFTWARE_TOOL',
        shape=[1],
        length=None,
        dtype=None),
    'SOLVER_PARAMETER': Keyword(
        name='SolverParameter',
        definition='Solver parameter and metadata',  # noqa
        key='SOLVER_PARAMETER',
        shape=[1],
        length=None,
        dtype=None),
    'SPH': Keyword(
        name='Sph',
        definition='Smooth particle hydrodynamics',  # noqa
        key='SPH',
        shape=[1],
        length=None,
        dtype=None),
    'STANDARD_STRESS_MODEL': Keyword(
        name='StandardStressModel',
        definition='Standard stress model (to use in mixture model)',  # noqa
        key='STANDARD_STRESS_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'STRESS_MODEL': Keyword(
        name='StressModel',
        definition='Stress model to use in mixture model',  # noqa
        key='STRESS_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'SURFACE_TENSION_RELATION': Keyword(
        name='SurfaceTensionRelation',
        definition='Surface tension relation between two fluids',  # noqa
        key='SURFACE_TENSION_RELATION',
        shape=[1],
        length=None,
        dtype=None),
    'TEMPERATURE_RESCALING': Keyword(
        name='TemperatureRescaling',
        definition='A simple temperature rescaling thermostat. The coupling time specifies how offen the temperature should be relaxed or coupled to the bath.',  # noqa
        key='TEMPERATURE_RESCALING',
        shape=[1],
        length=None,
        dtype=None),
    'TETRAGONAL_LATTICE': Keyword(
        name='TetragonalLattice',
        definition='A tetragonal lattice',  # noqa
        key='TETRAGONAL_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'THERMAL_MODEL': Keyword(
        name='ThermalModel',
        definition='Non-isothermal heat transport model',  # noqa
        key='THERMAL_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'THERMOSTAT': Keyword(
        name='Thermostat',
        definition='A thermostat is a model that describes the thermal interaction of a material with the environment or a heat reservoir',  # noqa
        key='THERMOSTAT',
        shape=[1],
        length=None,
        dtype=None),
    'TOTAL_PRESSURE_CONDITION': Keyword(
        name='TotalPressureCondition',
        definition='Total pressure boundary condition',  # noqa
        key='TOTAL_PRESSURE_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'TRICLINIC_LATTICE': Keyword(
        name='TriclinicLattice',
        definition='A triclinic lattice',  # noqa
        key='TRICLINIC_LATTICE',
        shape=[1],
        length=None,
        dtype=None),
    'TURBULENCE_MODEL': Keyword(
        name='TurbulenceModel',
        definition='Turbulence model',  # noqa
        key='TURBULENCE_MODEL',
        shape=[1],
        length=None,
        dtype=None),
    'VERLET': Keyword(
        name='Verlet',
        definition='Newtonian dynamics integration using verlet algorithm',  # noqa
        key='VERLET',
        shape=[1],
        length=None,
        dtype=None),
    'VERSION': Keyword(
        name='Version',
        definition='Version of a software tool used in a simulation',  # noqa
        key='VERSION',
        shape=[1],
        length=None,
        dtype=None),
    'WETTING_ANGLE': Keyword(
        name='WettingAngle',
        definition='Wetting angle Volume fraction wall boundary condition',  # noqa
        key='WETTING_ANGLE',
        shape=[1],
        length=None,
        dtype=None),
    'ZERO_GRADIENT_PRESSURE_CONDITION': Keyword(
        name='ZeroGradientPressureCondition',
        definition='Zero gradient pressure condition',  # noqa
        key='ZERO_GRADIENT_PRESSURE_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'ZERO_GRADIENT_VELOCITY_CONDITION': Keyword(
        name='ZeroGradientVelocityCondition',
        definition='Zero gradient velocity condition',  # noqa
        key='ZERO_GRADIENT_VELOCITY_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
    'ZERO_GRADIENT_VOLUME_FRACTION_CONDITION': Keyword(
        name='ZeroGradientVolumeFractionCondition',
        definition='Zero gradient volume fraction condition',  # noqa
        key='ZERO_GRADIENT_VOLUME_FRACTION_CONDITION',
        shape=[1],
        length=None,
        dtype=None),
}
